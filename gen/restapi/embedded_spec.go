// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Test BE IMP",
    "version": "0.0.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "security": [],
        "description": "Login User",
        "tags": [
          "Auth"
        ],
        "summary": "Login User",
        "operationId": "login",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "username",
                "password"
              ],
              "properties": {
                "password": {
                  "type": "string",
                  "minLength": 5
                },
                "username": {
                  "type": "string",
                  "minLength": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Login",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "expired_at": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Request Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "security": [],
        "description": "Signup User",
        "tags": [
          "Auth"
        ],
        "summary": "Signup User",
        "operationId": "signup",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "username",
                "fullname",
                "password"
              ],
              "properties": {
                "fullname": {
                  "type": "string"
                },
                "password": {
                  "type": "string",
                  "minLength": 5
                },
                "username": {
                  "type": "string",
                  "minLength": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Signup",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Request Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "security": [],
        "description": "Check if the App is Running",
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Health Check",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/userlist": {
      "get": {
        "security": [
          {
            "hasToken": []
          }
        ],
        "description": "List User",
        "tags": [
          "User"
        ],
        "summary": "List User",
        "operationId": "listUser",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success Get List User",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "message": {
                  "type": "string"
                },
                "metadata": {
                  "$ref": "#/definitions/Metadata"
                }
              }
            }
          },
          "default": {
            "description": "Request Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string",
          "example": "error"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "example": 1
        },
        "per_page": {
          "type": "integer",
          "example": 50
        },
        "total_page": {
          "type": "integer",
          "example": 4
        },
        "total_row": {
          "type": "integer",
          "example": 200
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "integer"
        },
        "fullname": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "object",
      "properties": {
        "expired_at": {
          "type": "string"
        },
        "user_id": {
          "type": "number",
          "format": "uint64"
        },
        "username": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "hasToken": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Test BE IMP",
    "version": "0.0.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "security": [],
        "description": "Login User",
        "tags": [
          "Auth"
        ],
        "summary": "Login User",
        "operationId": "login",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "username",
                "password"
              ],
              "properties": {
                "password": {
                  "type": "string",
                  "minLength": 5
                },
                "username": {
                  "type": "string",
                  "minLength": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Login",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "expired_at": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Request Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "security": [],
        "description": "Signup User",
        "tags": [
          "Auth"
        ],
        "summary": "Signup User",
        "operationId": "signup",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "username",
                "fullname",
                "password"
              ],
              "properties": {
                "fullname": {
                  "type": "string"
                },
                "password": {
                  "type": "string",
                  "minLength": 5
                },
                "username": {
                  "type": "string",
                  "minLength": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Signup",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Request Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "security": [],
        "description": "Check if the App is Running",
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Health Check",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/userlist": {
      "get": {
        "security": [
          {
            "hasToken": []
          }
        ],
        "description": "List User",
        "tags": [
          "User"
        ],
        "summary": "List User",
        "operationId": "listUser",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success Get List User",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "message": {
                  "type": "string"
                },
                "metadata": {
                  "$ref": "#/definitions/Metadata"
                }
              }
            }
          },
          "default": {
            "description": "Request Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string",
          "example": "error"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "example": 1
        },
        "per_page": {
          "type": "integer",
          "example": 50
        },
        "total_page": {
          "type": "integer",
          "example": 4
        },
        "total_row": {
          "type": "integer",
          "example": 200
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "integer"
        },
        "fullname": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "object",
      "properties": {
        "expired_at": {
          "type": "string"
        },
        "user_id": {
          "type": "number",
          "format": "uint64"
        },
        "username": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "hasToken": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
